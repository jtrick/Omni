{"ts":1363720537777,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// omni/admin.js  Copyright (c)2013 Codapt LLC, all rights reserved.  For license see: http://OpenAce.org/license?id=omni/admin.js\n\nvar watch = function(obj, attr, name, callback) {\n    var watchedValue = obj[attr];\n    // add a list of watchers to the object if not present\n    if (!obj.hasOwnProperty(\"_watchers\")) {\n        obj._watchers = {};\n    }\n    // add a watcher to the list for the specific attribute if not present\n    if (!obj._watchers.hasOwnProperty(attr)) {\n        obj._watchers[attr] = {};\n    }\n    // add a watcher with a specific name to this attribute\n    if (!obj._watchers[attr].hasOwnProperty(name)) {\n        obj._watchers[attr][name] = callback;\n    }\n\n    Object.defineProperty(obj, attr, {\n        set: function(value) {\n            watchedValue = value;\n            for (watcher in this._watchers[attr]) {\n              this._watchers[attr][watcher].apply(this, [value]);\n            }\n        },\n        get: function() {\n            return watchedValue;\n        }\n    });\n\n    // do an initial call to the watcher for the first value\n    obj[attr] = watchedValue;\n}\n\nvar unwatch = function(obj, attr, name) {\n    if (obj.hasOwnProperty(\"_watchers\") && obj._watchers.hasOwnProperty(attr) &&\n        obj._watchers[attr].hasOwnProperty(name)) {\n        delete  obj._watchers[attr][name];\n    }\n}\n\n$.widget(\"ui.patternCard\", {\n    options: {},\n    setStatistic: function(stat) {\n        this.element.find('.body .large').text(stat);\n    },\n    _create: function() {\n        var options = this.options,\n            domElem = this.element,\n            cardTemp = _.template(''\n                + '<div class=\"title\">'\n                    + '<div class=\"{{icon}}\"></div>'\n                    + '<div>{{title}}</div>'\n                + ' </div>'\n                + '<div class=\"body\">'\n                    + '<div class=\"timeframe\">In the <span class=\"underline\">{{timeframe}}</span>:</div>'\n                    + '<div class=\"large\">{{statistic}}</div>'\n                    + '<div class=\"tag\">Tag: {{tag}}</div>'\n                    + '<div class=\"card-btns\">'\n                        + '<div class=\"graphs-card-btn\"></div>'\n                        + '<div class=\"duplicate-card-btn\"></div>'\n                        + '<div class=\"share-card-btn\"></div>'\n                        + '<div class=\"delete-card-btn\"></div>'\n                    + '</div>'\n                + '</div>'\n        );\n\n        domElem.addClass(\"card\").html(cardTemp(options));\n\n        domElem.children(\".title\").disableSelection();\n        if (options.hasOwnProperty(\"titleColor\")) {\n            domElem.children(\".title\").css(\"backgroundColor\", options.titleColor);\n        }\n    }\n});\n\n$(document).ready(function omniAdminReady() {\n\n    $(\"#card1\").patternCard({\n        title: \"Time Spent On Homepage Prior ...\",\n        timeframe: \"last hour\",\n        statistic: \"11.78s\",\n        tag: \"Display this data daily\",\n        icon: \"title-icon\",\n        titleColor: \"#e75555\"\n    });\n    $(\"#card2\").patternCard({\n        title: \"Number Of New Logins Created\",\n        timeframe: \"last 6 hours\",\n        statistic: \"9\",\n        tag: \"Display this data every Monday\",\n        icon: \"title-icon-2\"\n    });\n    $(\"#card3\").patternCard({\n        title: \"Number Of Unique Guest IDs\",\n        timeframe: \"last 6 hours\",\n        statistic: \"22\",\n        tag: \"Display this data every Monday\",\n        icon: \"title-icon-2\"\n    });\n    $(\"#card4\").patternCard({\n        title: \"Ratio New Logins Created/Unique ...\",\n        timeframe: \"last 6 hours\",\n        statistic: \"0.409\",\n        tag: \"Display this data every Monday\",\n        icon: \"title-icon-2\"\n    });\n\n    $(\"#panels-sect\").sortable({handle: \".title\", opacity: 0.5, cursor: \"move\"});\n\n    // testing some watch/unwatch stuff\n    var b = {\n            x: 0,\n            y: 10,\n            newLogins: 6\n        };\n\n    watch(b, \"x\", \"xWatcher\", function(value) {\n        $('#main-top-bar').text(value);\n    });\n    watch(b, \"y\", \"yWatcher\", function(value) {\n        $('#main-top-bar').text($('#main-top-bar').text() + \" \" + value);\n    });\n    watch(b, \"x\", \"xWatcher2\", function(value) {\n        $('#main-top-bar').text($('#main-top-bar').text() + \" \" + value);\n    });\n    unwatch(b, \"x\", \"xWatcher2\");\n\n    b.x = 20;\n    b.y = \"Calvin\";\n\n    // actually do something that this might be used for\n    watch(b, \"newLogins\", \"pullNewLogins\", function(value) {\n        $('#card2').patternCard(\"setStatistic\", value);\n    });\n\n    // make a timer to update it\n    setInterval(function() {\n        b.newLogins++;\n    }, 2000);\n\t\n}(jQuery)); //omniAdminReady()"]],"start1":0,"start2":0,"length1":0,"length2":4602}]],"length":4602}
{"contributors":[],"silentsave":false,"ts":1363721004252,"patch":[[{"diffs":[[0,"Value;\n}"],[1,";"],[0,"\n\nvar un"]],"start1":1090,"start2":1090,"length1":16,"length2":17},{"diffs":[[0,"\n    }\n}"],[1,";"],[0,"\n\n$.widg"]],"start1":1318,"start2":1318,"length1":16,"length2":17},{"diffs":[[0,"</div>'\n"],[-1,"        "],[1,"\t\t\t"],[0,");\n\n    "]],"start1":2396,"start2":2396,"length1":24,"length2":19}]],"length":4599,"saved":false}
{"ts":1363721658114,"patch":[[{"diffs":[[0," 2000);\n"],[1,"    \n    \n    // The omniFrame API abstraction\n    \n    \n"],[0,"\t\n}(jQue"]],"start1":4559,"start2":4559,"length1":16,"length2":73},{"diffs":[[0,"ry)); //omniAdminReady()"],[1,"\n\n"]],"start1":4632,"start2":4632,"length1":24,"length2":26}]],"length":4658,"saved":false}
{"ts":1363730202736,"patch":[[{"diffs":[[0,"traction"],[1,". Instantiates OmniCommFrame iframe embedded in div, to handle data transmission to the server, stores the object in vars.dataFrame, and initiates data transmission.\n\tfunction dataFrame(options) {\n\t\tvar o = $.extend({\n\t\t\t\t\"parent\" : 'body',\n\t\t\t}, options),\n\t\t\tkey = makeKey();\n\t\t\t\n\t\t$(\"body\").append('<div id=\"'+dataDivId||'dataDiv'+'\"></div>');\n\t\t\n\t\t// Fix!  We'll want to instantiate a secondary frame for secure processing and communications.\n\t\t// v.dataFrame = new OmniCommFrame({\n\t\t\t// \"url\" : 'https://codapt.com/o/',\n\t\t\t// \"parent\" : o.parent,\n\t\t\t// \"visible\" : false,\n\t\t\t// \"query\" : { \n\t\t\t\t// \"a\" : Date.now(),\n\t\t\t\t// \"cmd\" : 'load',\n\t\t\t\t// \"Url\" : window.location.href,\n\t\t\t\t// \"Origin\" : window.location.origin,\n\t\t\t\t// \"Pub\" : key,\n\t\t\t\t// \"Old\" : localStore({\"cmd\":'get',\"key\":'Old'})\n\t\t\t// },\n\t\t\t// \"callback\" : function(data) {\n\t\t\t\t// var cmd = data.cmd;\n\t\t\t\t// if (cmd == \"ping\") {\n\t\t\t\t\t// adminUpdate(data);\n\t\t\t\t// } else if (cmd == \"msg\") {\n\t\t\t\t\t// adminMsg(data);\n\t\t\t\t// } else if (cmd == \"load\") {\n\t\t\t\t\t// adminLoad(data);\n\t\t\t\t// }\n\t\t\t// }\n\t\t// });\n\t\t\n\t\t\n\t\t\t\n\t\to.comm = new CommObj();  // Fix! Transition this into iframe.\n\t\t\n\t\t\n\t\t\n\t\tfunction adminUpdate(data) {\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tfunction adminMsg(data) {\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\tfunction adminLoad(data) {\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\n\t\t// Used for all communications with central server, ACE, client server, etc. Abstracts mechanisms behind these transmissions to simplify use.\n\t\tfunction CommObj() {  // Fix.  We'll want to relay this through ACE in a secondary frame.\n\t\t\tvar _this = this,\n\t\t\t\tlog = [],\n\t\t\t\tque = {  // Stores requests to be made to server and items returned but not loaded yet.\n\t\t\t\t\t\"wait\" : [],  // a JSON containing callObjs that are to be sent to the server but in wait due to lack of connectivity or other cases. Ordered by time placed.\n\t\t\t\t\t\"out\" : [],  // a JSON containing callObjs that have been sent to the server, ordered by time placed.\n\t\t\t\t\t\"back\" : []  // Array of sequentially returned aceObjs, to be processed locally and returned.\n\t\t\t\t};\n\t\t\t\n\t\t\tajaxInit();\n\t\t\n\t\t\n\t\t\t///////  CommObj Exposed Methods  /////////////////////\n\t\t\n\t\t\n\t\t\t// Packages and initiates the actual call to the server.\n\t\t\tthis.send = function makeCall(dat, cmd) {\n\t\t\t\tvar timeNow = Date.now();\n\t\t\t\tlocalStore({\"cmd\":'set',\"key\":'Pub',\"val\":(key=makeKey())});\n\t\t\t\tvar callObj = {\n\t\t\t\t\t\"a\" : timeNow,\n\t\t\t\t\t\"cmd\" : cmd || 0,\n\t\t\t\t\t\"dat\" : dat,\n\t\t\t\t\t\"Pub\" : key,\n\t\t\t\t\t\"Old\" : localStore({\"cmd\":'get',\"key\":'Old'})\n\t\t\t\t};\n\t\t\t\tque.out[timeNow] = callObj;\n\t\t\t\t$.ajax({\"data\":callObj});\n\t\t\t\t// logMsg('makeCall() data sent.', callObj);\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\t///////  CommObj Private Functions  /////////////////////\n\t\t\n\t\t\t\n\t\t\t// Sets ajax defaults and establishes generic connection with an appropriate ACE server.\n\t\t\tfunction ajaxInit() {\n\t\t\t\t$.ajaxSetup({\n\t\t\t\t\turl : 'https://codapt.com/o/',\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t// crossDomain: false,\n\t\t\t\t\tbeforeSend: ajaxPreCall,\n\t\t\t\t\tsuccess: ajaxSuccess,\n\t\t\t\t\terror: ajaxError,\n\t\t\t\t\tcomplete: ajaxComplete\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t$.ajax({\"data\":{\n\t\t\t\t\t\"a\" : Date.now(),\n\t\t\t\t\t\"cmd\" : 'load',\n\t\t\t\t\t\"Url\" : window.location.href,\n\t\t\t\t\t\"Origin\" : window.location.origin,\n\t\t\t\t\t\"Pub\" : key,\n\t\t\t\t\t\"Old\" : localStore({\"cmd\":'get',\"key\":'Old'})\n\t\t\t\t}});\n\t\t\t}\n\t\n\t\n\t\t\t// Used for low level ajax call tracking and error handling.\n\t\t\tfunction ajaxPreCall(xhrObj, ajaxObj) {\n\t\t\t\t// var callObj = {\n\t\t\t\t\t// \"url\" : ajaxObj.url,\n\t\t\t\t\t// \"type\" : ajaxObj.type,\n\t\t\t\t\t// \"data\" : ajaxObj.data\n\t\t\t\t// };\n\t\t\t\t// logMsg('ajax pre-call...', callObj);  // Fix?\n\t\t\t\t// if (!ajaxObj.data || !ajaxObj.data.a) {\n\t\t\t\t\t// var errorObj = {\n\t\t\t\t\t\t// \"error\" : \"ajaxObj.data.a is not set!\",\n\t\t\t\t\t\t// \"data\" : ajaxObj.data,\n\t\t\t\t\t\t// \"ajaxObj\" : ajaxObj\n\t\t\t\t\t// }\n\t\t\t\t\t// flagError(\"iframe ajaxPreCall error\", errorObj);\n\t\t\t\t// }\n\t\t\t}\n\t\n\t\n\t\t\t// Called on completion of each ajax request to handle returned data.\n\t\t\tfunction ajaxSuccess(data, status, xhrObj) {\n\t\t\t\tif (!data || !_.isObject(data)) {\n\t\t\t\t\tvar errorObj = {\n\t\t\t\t\t\t\"data\" : data,\n\t\t\t\t\t\t\"xhrObj\" : xhrObj,\n\t\t\t\t\t\t\"status\" : status\n\t\t\t\t\t};\n\t\t\t\t\t// flagError(\"iframe ajaxSuccess returned bad data.\", errorObj);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar backTime = Date.now(),\n\t\t\t\t\tdataObj = jsonToObj(data),\n\t\t\t\t\tcallTime = dataObj.a || 0,\n\t\t\t\t\tlag = backTime-callTime,\n\t\t\t\t\tcmd = dataObj.cmd;\n\t\t\t\t\n\t\t\t\tlocalStore({\"cmd\":'set',\"key\":'Old'});\n\t\t\t\t// if (!callTime) { flagError('No returned callTime for this ajax data.') }\n\t\t\t\tif (cmd == \"ping\") {\n\t\t\t\t\tadminUpdate(data);\n\t\t\t\t} else if (cmd == \"msg\") {\n\t\t\t\t\tadminMsg(data);\n\t\t\t\t} else if (cmd == \"load\") {\n\t\t\t\t\tadminLoad(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t// Handles errors for iframe AJAX requests.\n\t\t\tfunction ajaxError(xhrObj, status, error) {\n\t\t\t\t// flagError(\"iframe AJAX eror\", {\n\t\t\t\t\t// \"error\" : error,\n\t\t\t\t\t// \"status\" : status,\n\t\t\t\t\t// \"xhrObj\" : xhrObj\n\t\t\t\t// });\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t//Called after all other handlers have been called for request.\n\t\t\tfunction ajaxComplete(jqXHR, status) {\n\t\t\t\t//logMsg('ajax completed. Status: ', status);\n\t\t\t\t// if (status != \"success\") {\n\t\t\t\t\t// logMsg(\"Problem with ajax call\", status);\n\t\t\t\t\t// // flagError(\"Problem initiating connection. Status: \"+status, jqXHR);\n\t\t\t\t// }\n\t\t\t}\n\t\t\t\n\t\n\t\t};//CommObj();\n\t\t\n\t\t\n\t}//dataFrame()\n\t\n\t\n\t// Generates the unique key used to identify this client between the simultaneous server connections.\n\tfunction makeKey(length) {\n\t\tvar keyStr = ''+Date.now(),\n\t\t\tchars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\",\n\t\t\tcharsL = chars.length;\n\t\tlength = (length||64)-keyStr.length;\n\t\tfor (var i=0; i<length; i++) { keyStr += chars.charAt(Math.floor(Math.random()*charsL)); }\n\t\treturn keyStr;\n\t}\n\t\n\t\n\t// Abstraction for the standard localStorage object.\n\tfunction localStore(callObj) { \n\t\tif (!$.isPlainObject(callObj)) { return; }  // Fix?  Error handling?\n\t\tvar cmd = callObj.cmd,\n\t\t\tkey = callObj.key,\n\t\t\tval = callObj.val;\n\t\tif (cmd == \"get\") { return localStorage.getItem(key); }\n\t\tif (cmd == \"set\") { return localStorage.setItem(key, val); }\n\t\tif (cmd == \"add\") {\treturn localStorage.setItem(key, val); }\n\t\tif (cmd == \"del\") {\treturn localStorage.removeItem(key); }\n\t\tif (cmd == \"clr\") { return localStorage.clear(); }  // Erases the entire db. Fix. Safety mechanisms?\n\t\tif (cmd == \"has\") { return (undefined===localStorage.getItem(key))?false:true; }\n\t\tif (cmd == \"all\") {\t\n\t\t\tvar tblArray = [];\n\t\t\tfor (var tblName in localStorage) { tblArray.push(tblName); }\n\t\t\treturn tblArray;\n\t\t}\n\t}//localStore()\n\t\n\t\n\t// Performs basic checks for JSON structure and returns the extracted object if applicable, returns the original string otherwise.\n\tfunction jsonToObj(str) {\n\t\tif (!$.isString(str)) { return str; }\n\t\t// Fix. Complete these checks.\n\t\tvar obj = JSON.parse(str);\n\t\treturn $.isPlainObject(obj) ? obj : str;\n\t}\n\t\n\t\n\t// Performs basic checks for JSON qualified object structure and returns the stringified JSON object if applicable, returns the original object otherwise.\n\tfunction jsonToStr(obj) {\n\t\tif (!$.isPlainObject(obj)) { return obj; }\n\t\t// Fix. Complete these checks.\n\t\tvar str = JSON.stringify(obj);\n\t\treturn $.isString(str) ? str : obj;\n\t}\n\t"],[0,"\n    \n  "]],"start1":4605,"start2":4605,"length1":16,"length2":7102}]],"length":11744,"saved":false}
{"ts":1363730221185,"patch":[[{"diffs":[[0,";\n    \n    \n"],[1,"    \n    \n    \n    \n"],[0,"    // The o"]],"start1":4565,"start2":4565,"length1":24,"length2":44}]],"length":11764,"saved":false}
{"ts":1363740123627,"patch":[[{"diffs":[[0," == \"del\") {"],[-1,"\t"],[1," "],[0,"return local"]],"start1":10679,"start2":10679,"length1":25,"length2":25}]],"length":11764,"saved":false}
{"ts":1363740125800,"patch":[[{"diffs":[[0,"\"add\") {"],[-1,"\t"],[1," "],[0,"return l"]],"start1":10620,"start2":10620,"length1":17,"length2":17}]],"length":11764,"saved":false}
{"ts":1363740135283,"patch":[[{"diffs":[[0,"\"all\") {"],[-1,"\t"],[0,"\n\t\t\tvar "]],"start1":10930,"start2":10930,"length1":17,"length2":16}]],"length":11763,"saved":false}
